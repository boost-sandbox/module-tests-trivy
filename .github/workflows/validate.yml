name: Trivy modules validation
on:
  workflow_dispatch:
    inputs:
      tmate:
        description: 'Debug with TMate'
        required: false
        default: false
        type: boolean
  
env:
  BOOST_LOG_LEVEL: INFO

jobs:
  boost:
    name: Trivy on ${{ matrix.target }} to ${{ matrix.environment }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [gitleaks]
        environment: [prod]
        include:
          - environment: prod
            registry_url: https://github.com/boost-community/scanner-registry.git
            api_endpoint: https://api.boostsecurity.io
            api_token_secret_name: BOOST_API_KEY
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@63c24ba6bd7ba022e95695ff85de572c04a18142 # v2.7.0
        with:
          egress-policy: audit
            
      - name: Clone
        uses: actions/checkout@v4

      - name: Install Boost CLI
        run: bash .github/scripts/get-boost-cli.sh

      - name: Setup tmate session (optional)
        if: inputs.tmate
        uses: mxschmitt/action-tmate@v3
      
      - name: 'trivy-fs on ${{ matrix.target }}'
        continue-on-error: true
        run: bash .github/scripts/scan.sh
        env:
          BOOST_SCANNER_REGISTRY_MODULE: boostsecurityio/trivy-fs
          BOOST_SCANNER_REGISTRY_REPO: ${{ matrix.registry_url }}
          BOOST_API_ENDPOINT: ${{ matrix.api_endpoint }}
          BOOST_API_TOKEN: ${{ secrets[matrix.api_token_secret_name] }}
          BOOST_SCAN_LABEL: ${{ matrix.target }}
          BOOST_SCAN_PATH: ${{ matrix.target }}
          
      - name: 'trivy-sbom on ${{ matrix.target }}'
        continue-on-error: true
        run: bash .github/scripts/scan.sh
        env:
          BOOST_SCANNER_REGISTRY_MODULE: boostsecurityio/trivy-sbom
          BOOST_SCANNER_REGISTRY_REPO: ${{ matrix.registry_url }}
          BOOST_API_ENDPOINT: ${{ matrix.api_endpoint }}
          BOOST_API_TOKEN: ${{ secrets[matrix.api_token_secret_name] }}
          BOOST_SCAN_LABEL: ${{ matrix.target }}
          BOOST_SCAN_PATH: ${{ matrix.target }}
    
      - name: Prepare Docker image
        env:
          BOOST_IMAGE_NAME: ${{ matrix.target }}
        run: |
          cd "$BOOST_IMAGE_NAME"
          docker build -t "$BOOST_IMAGE_NAME" .
          
      - name: 'trivy-image on ${{ matrix.target }}'
        continue-on-error: true
        run: bash .github/scripts/scan.sh
        env:
          BOOST_SCANNER_REGISTRY_MODULE: boostsecurityio/trivy-image
          BOOST_SCANNER_REGISTRY_REPO: ${{ matrix.registry_url }}
          BOOST_API_ENDPOINT: ${{ matrix.api_endpoint }}
          BOOST_API_TOKEN: ${{ secrets[matrix.api_token_secret_name] }}
          BOOST_SCAN_LABEL: ${{ matrix.target }} Docker
          BOOST_SCAN_PATH: ${{ matrix.target }}
          BOOST_IMAGE_NAME: ${{ matrix.target }}

      - name: 'trivy-sbom-image on ${{ matrix.target }}'
        continue-on-error: true
        run: bash .github/scripts/scan.sh
        env:
          BOOST_SCANNER_REGISTRY_MODULE: boostsecurityio/trivy-sbom-image
          BOOST_SCANNER_REGISTRY_REPO: ${{ matrix.registry_url }}
          BOOST_API_ENDPOINT: ${{ matrix.api_endpoint }}
          BOOST_API_TOKEN: ${{ secrets[matrix.api_token_secret_name] }}
          BOOST_SCAN_LABEL: ${{ matrix.target }} Docker
          BOOST_SCAN_PATH: ${{ matrix.target }}
          BOOST_IMAGE_NAME: ${{ matrix.target }}
