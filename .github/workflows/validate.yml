name: Trivy modules validation
on:
  workflow_dispatch:
  
env:
  BOOST_LOG_LEVEL: INFO

jobs:
  boost:
    name: Trivy on ${{ matrix.target }} to ${{ matrix.environment }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [gitleaks]
        environment: [prod]
        include:
          - environment: prod
            registry_url: https://github.com/boost-community/scanner-registry.git
            api_endpoint: https://api.boostsecurity.io
            api_token_secret_name: BOOST_API_KEY
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@63c24ba6bd7ba022e95695ff85de572c04a18142 # v2.7.0
        with:
          egress-policy: audit
            
      - name: Clone
        uses: actions/checkout@v4

      - name: Install Boost CLI
        run: bash .github/scripts/get-boost-cli.sh

      - name: download trivy
        env:
          VERSION: 0.53.0
          LINUX_X86_64_SHA: 9ddc7209f575990d07babe824e4c66e5dcb9eea010cc93a7c7a4f2014d1d6190
          LINUX_ARM64_SHA: 81e6920b904a0ea40b16d911ff4e7dfc546bff749062f86164188f9272686457
          MACOS_X86_64_SHA: 8d9f8b763eb8271dbdb6a2e8289ec2df3ae31e4f1ae58c7c437b981dc3b1c98b
          MACOS_ARM64_SHA: dfb17fad8b25af497bf9c27f6946aed8d13e2375add3e17e372369f2a8305f96
        run: |
          BINARY_URL="https://github.com/aquasecurity/trivy/releases/download/v${VERSION}"
          ARCH=$(uname -m)

          case "$(uname -sm)" in
            "Linux x86_64")
              BINARY_URL="${BINARY_URL}/trivy_${VERSION}_Linux-64bit.tar.gz"
              SHA="${LINUX_X86_64_SHA} trivy.tgz"
              ;;
            "Linux aarch64")
              BINARY_URL="${BINARY_URL}/trivy_${VERSION}_Linux-ARM64.tar.gz"
              SHA="${LINUX_ARM64_SHA} trivy.tgz"
              ;;
            "Darwin x86_64")
              BINARY_URL="${BINARY_URL}/trivy_${VERSION}_macOS-64bit.tar.gz"
              SHA="${MACOS_X86_64_SHA} trivy.tgz"
              ;;
            "Darwin arm64")
              BINARY_URL="${BINARY_URL}/trivy_${VERSION}_macOS-ARM64.tar.gz"
              SHA="${MACOS_ARM64_SHA} trivy.tgz"
              ;;
            *)
              echo "Unsupported machine: ${OPTARG}"
              exit 1
              ;;
          esac

          curl -o trivy.tgz -fsSL "${BINARY_URL}"
          echo "${SHA}" | sha256sum --check

          tar --no-same-owner -zxf trivy.tgz trivy
          rm trivy.tgz
          chmod +x trivy

      - name: Pull Boost Trivy Post Processor Image 1
        run: docker pull public.ecr.aws/boostsecurityio/boost-scanner-trivy:03670e3@sha256:4a633746f474508b2f5b715ba5e56edfb1ce08e2ebb31d3e6f5eb839253f97b3

      - name: Pull Boost Trivy Post Processor Image 2
        run: docker pull public.ecr.aws/boostsecurityio/boost-scanner-trivy:98a7dba@sha256:4a884b0dc8232bb85327a72bfe84c60cb56d0c8d663601a4c140d057552d7ee8

      - name: Pull Boost Trivy-Sbom Post Processor Image 1
        run: docker pull public.ecr.aws/boostsecurityio/boost-scanner-trivy-sbom:2077b09@sha256:9acea8e0566becbbf19a51b7de326cda23d124254091f38cf5e2132f298a1301

      - name: Pull Boost Trivy-Sbom Post Processor Image 2
        run: docker pull public.ecr.aws/boostsecurityio/boost-scanner-trivy-sbom:dcc6f5c@sha256:3cf4ee0319f6ebe729e831d743a227332c12d62941df9f6d3eb21db441d8d8c5
      
      - name: 'trivy-fs on ${{ matrix.target }}'
        continue-on-error: true
        run: bash .github/scripts/scan.sh
        env:
          BOOST_SCANNER_REGISTRY_MODULE: boostsecurityio/trivy-fs
          BOOST_SCANNER_REGISTRY_REPO: ${{ matrix.registry_url }}
          BOOST_API_ENDPOINT: ${{ matrix.api_endpoint }}
          BOOST_API_TOKEN: ${{ secrets[matrix.api_token_secret_name] }}
          BOOST_SCAN_LABEL: ${{ matrix.target }}
          BOOST_SCAN_PATH: ${{ matrix.target }}
          
      - name: 'trivy-sbom on ${{ matrix.target }}'
        continue-on-error: true
        run: bash .github/scripts/scan.sh
        env:
          BOOST_SCANNER_REGISTRY_MODULE: boostsecurityio/trivy-sbom
          BOOST_SCANNER_REGISTRY_REPO: ${{ matrix.registry_url }}
          BOOST_API_ENDPOINT: ${{ matrix.api_endpoint }}
          BOOST_API_TOKEN: ${{ secrets[matrix.api_token_secret_name] }}
          BOOST_SCAN_LABEL: ${{ matrix.target }}
          BOOST_SCAN_PATH: ${{ matrix.target }}
    
      - name: Prepare Docker image
        env:
          BOOST_IMAGE_NAME: ${{ matrix.target }}
        run: |
          cd "$BOOST_IMAGE_NAME"
          docker build -t "$BOOST_IMAGE_NAME" .
          
      - name: 'trivy-image on ${{ matrix.target }}'
        continue-on-error: true
        run: bash .github/scripts/scan.sh
        env:
          BOOST_SCANNER_REGISTRY_MODULE: boostsecurityio/trivy-image
          BOOST_SCANNER_REGISTRY_REPO: ${{ matrix.registry_url }}
          BOOST_API_ENDPOINT: ${{ matrix.api_endpoint }}
          BOOST_API_TOKEN: ${{ secrets[matrix.api_token_secret_name] }}
          BOOST_SCAN_LABEL: ${{ matrix.target }} Docker
          BOOST_SCAN_PATH: ${{ matrix.target }}
          BOOST_IMAGE_NAME: ${{ matrix.target }}

      - name: 'trivy-sbom-image on ${{ matrix.target }}'
        continue-on-error: true
        run: bash .github/scripts/scan.sh
        env:
          BOOST_SCANNER_REGISTRY_MODULE: boostsecurityio/trivy-sbom-image
          BOOST_SCANNER_REGISTRY_REPO: ${{ matrix.registry_url }}
          BOOST_API_ENDPOINT: ${{ matrix.api_endpoint }}
          BOOST_API_TOKEN: ${{ secrets[matrix.api_token_secret_name] }}
          BOOST_SCAN_LABEL: ${{ matrix.target }} Docker
          BOOST_SCAN_PATH: ${{ matrix.target }}
          BOOST_IMAGE_NAME: ${{ matrix.target }}
